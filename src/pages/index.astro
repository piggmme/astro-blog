---
import Card from '@/components/Card.astro'
import BaseLayout from '@/layouts/BaseLayout.astro'
import { camelize } from '@/utils/string'
import '@/utils/dayjs'
import Swiper from '@/components/Swiper/Swiper'
import { dayFormat } from '@/utils/dayjs'

interface Post {
  frontmatter: {
    title: string
    tags: string[]
    pubDate: string
    image: {
      url: string
      alt?: string
    }
    bgcolor: string
    color: string
  }
  url?: string
}
const allPosts: Post[] = await Astro.glob('./posts/*/*.md')
const uniqueTags = [...new Set(allPosts.map(post => post.frontmatter.tags).flat())]
const tags = uniqueTags.map((tag) => {
  const filteredPosts = allPosts.filter(post => post.frontmatter.tags.includes(tag)) as Post[]
  filteredPosts.sort((a, b) => {
    const aDate = new Date(a.frontmatter.pubDate)
    const bDate = new Date(b.frontmatter.pubDate)
    return bDate.getTime() - aDate.getTime()
  })
  return {
    tag,
    posts: filteredPosts,
  }
}).sort((postA, postB) => {
  const findLatest = (posts: Post[]) => {
    return posts.reduce((prev, current) => {
      const prevDate = new Date(prev.frontmatter.pubDate)
      const currentDate = new Date(current.frontmatter.pubDate)
      return prevDate.getTime() > currentDate.getTime() ? prev : current
    })
  }
  const latestPostA = findLatest(postA.posts)
  const latestPostB = findLatest(postB.posts)

  const aDate = new Date(latestPostA.frontmatter.pubDate)
  const bDate = new Date(latestPostB.frontmatter.pubDate)
  return bDate.getTime() - aDate.getTime()
})
---
<BaseLayout title='@dev.hee'>
  <section class='home-header'>
    <h1>@dev_hee</h1>
    <p>그림쟁이 개발자 데브희입니다. <br />저의 보조기억 장치에 오신 것을 환영합니다.</p>
  </section>

  {
    tags.map(({ tag, posts }) => (
      <section class='home-posts'>
        <h2>#{camelize(tag)}</h2>
        <Swiper client:only='react' transition:persist>
          {posts.map(post => (
            <Swiper.Item>
              <Card as='a' href={post.url} class='card'>
                <h3 class='title'>
                  {post.frontmatter.title}
                </h3>
                <span class='subtitle'>{dayFormat(post.frontmatter.pubDate)}</span>
              </Card>
            </Swiper.Item>
          ))}
        </Swiper>
      </section>
    ))
  }
</BaseLayout>

<style lang='scss'>
  .home-header {
    margin-bottom: 24px;
    padding: 36px;
    h1 {
      font-size: rem(48px);
      font-weight: 700;
    }
    p {
      font-size: rem(18px);
      font-weight: 300;
      line-height: 1.3;
    }
  }

  .home-posts{
    margin-bottom: 48px;
    box-sizing: border-box;

    h2 {
      padding-left: 36px;
      font-size: rem(24px);
      font-weight: 700;
      margin-bottom: 16px;
    }

    ul {
      display: flex;
      gap: 24px;
      width: 100%;
      overflow-x: scroll;
      padding: 16px;
      padding-left: 36px;
      box-sizing: border-box;
    }

    .card {
      position: relative;
      padding: 16px;
    }
    .title {
      font-size: rem(20px);
      font-weight: 700;
      word-break: keep-all;
    }
    .subtitle {
      color: $grey-400;
      font-size: rem(12px);
    }
  }
</style>
